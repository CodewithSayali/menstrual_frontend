{"ast":null,"code":"var _jsxFileName = \"C:\\\\vardha\\\\Menstrual\\\\frontend\\\\src\\\\pages\\\\LoginPage.js\",\n  _s = $RefreshSig$();\n/*import React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"../styles/LoginPage.css\";\r\n\r\nconst LoginPage = () => {\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <h2>Login to CycleCare</h2>\r\n      <form>\r\n        <input type=\"email\" placeholder=\"Email\" required />\r\n        <input type=\"password\" placeholder=\"Password\" required />\r\n        <button type=\"submit\">Login</button>\r\n      </form>\r\n      <p>Don't have an account? <span onClick={() => navigate(\"/register\")}>Register</span></p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n*/\n\n/*\r\n// THis IS MY CODE \r\nimport React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"../styles/LoginPage.css\";\r\n\r\nconst LoginPage = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n\r\n    // Mock authentication - Replace with API call if needed\r\n    if (email === \"test@example.com\" && password === \"password\") {\r\n      localStorage.setItem(\"user\", JSON.stringify({ email }));\r\n      navigate(\"/dashboard\"); // Redirect to Dashboard\r\n    } else {\r\n      alert(\"Invalid credentials!\"); // Show error message\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <h2>Login to CycleCare</h2>\r\n      <form onSubmit={handleLogin}>\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          required\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          required\r\n        />\r\n        <button type=\"submit\">Login</button>\r\n      </form>\r\n      <p>\r\n        Don't have an account? <span onClick={() => navigate(\"/register\")}>Register</span>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n*/\n\n/*import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"../styles/LoginPage.css\";\r\n\r\nconst LoginPage = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\"); // To store error messages\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    setError(\"\"); // Clear any previous errors\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:3000/login\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ email, password }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      console.log(\"Login Response:\", data); // Debugging\r\n\r\n      if (response.ok) {\r\n        localStorage.setItem(\"user\", JSON.stringify(data.user)); // Save user details\r\n        navigate(\"/dashboard\"); // Redirect to dashboard\r\n      } else {\r\n        setError(data.message || \"Invalid credentials!\");\r\n      }\r\n    } catch (err) {\r\n      setError(\"Server error! Please try again later.\");\r\n      console.error(\"Login Error:\", err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <h2>Login to CycleCare</h2>\r\n      <form onSubmit={handleLogin}>\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          required\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          required\r\n        />\r\n        {error && <p className=\"error\">{error}</p>} \r\n        <button type=\"submit\">Login</button>\r\n      </form>\r\n      <p>\r\n        Don't have an account? <span onClick={() => navigate(\"/register\")}>Register</span>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n*/\n\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n//import API_BASE_URL from \"../config\"; // Import API base URL\nimport \"../styles/LoginPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\"); // To handle error messages\n  const navigate = useNavigate();\n  /*\r\n    const handleLogin = async (e) => {\r\n      e.preventDefault();\r\n      setError(\"\"); // Clear previous errors\r\n  \r\n      try {\r\n        const response = await fetch(`${API_BASE_URL}/login`, {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify({ email, password }),\r\n        });\r\n  \r\n        const data = await response.json();\r\n  \r\n        if (response.ok) {\r\n          localStorage.setItem(\"token\", data.token); // Store JWT token\r\n          localStorage.setItem(\"user\", JSON.stringify(data.user)); // Store user details\r\n          navigate(\"/dashboard\"); // Redirect to Dashboard\r\n        } else {\r\n          setError(data.message || \"Invalid credentials!\"); // Display error message\r\n        }\r\n      } catch (err) {\r\n        setError(\"Something went wrong! Please try again.\");\r\n      }\r\n    };\r\n  */\n  const handleLogin = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch(\"http://localhost:3000/api/users/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        alert(\"Login successful!\");\n        localStorage.setItem(\"token\", data.token);\n        localStorage.setItem(\"userId\", data.userId);\n        navigate(\"/dashboard\");\n      } else {\n        alert(data.message);\n      }\n    } catch (error) {\n      // Corrected: Declaring 'error' here\n      alert(\"Login failed: \" + error.message);\n      console.error(\"Error during login:\", error); // Logging the error for debugging\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login to CycleCare\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 19\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: () => navigate(\"/register\"),\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 224,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"Ktx5ktSKAplPJrsY5gRTpmAHqe0=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","LoginPage","_s","email","setEmail","password","setPassword","error","setError","navigate","handleLogin","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","ok","alert","localStorage","setItem","token","userId","message","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","onClick","_c","$RefreshReg$"],"sources":["C:/vardha/Menstrual/frontend/src/pages/LoginPage.js"],"sourcesContent":["/*import React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"../styles/LoginPage.css\";\r\n\r\nconst LoginPage = () => {\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <h2>Login to CycleCare</h2>\r\n      <form>\r\n        <input type=\"email\" placeholder=\"Email\" required />\r\n        <input type=\"password\" placeholder=\"Password\" required />\r\n        <button type=\"submit\">Login</button>\r\n      </form>\r\n      <p>Don't have an account? <span onClick={() => navigate(\"/register\")}>Register</span></p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n*/\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*\r\n// THis IS MY CODE \r\nimport React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"../styles/LoginPage.css\";\r\n\r\nconst LoginPage = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n\r\n    // Mock authentication - Replace with API call if needed\r\n    if (email === \"test@example.com\" && password === \"password\") {\r\n      localStorage.setItem(\"user\", JSON.stringify({ email }));\r\n      navigate(\"/dashboard\"); // Redirect to Dashboard\r\n    } else {\r\n      alert(\"Invalid credentials!\"); // Show error message\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <h2>Login to CycleCare</h2>\r\n      <form onSubmit={handleLogin}>\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          required\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          required\r\n        />\r\n        <button type=\"submit\">Login</button>\r\n      </form>\r\n      <p>\r\n        Don't have an account? <span onClick={() => navigate(\"/register\")}>Register</span>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n*/\r\n\r\n/*import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"../styles/LoginPage.css\";\r\n\r\nconst LoginPage = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\"); // To store error messages\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    setError(\"\"); // Clear any previous errors\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:3000/login\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ email, password }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      console.log(\"Login Response:\", data); // Debugging\r\n\r\n      if (response.ok) {\r\n        localStorage.setItem(\"user\", JSON.stringify(data.user)); // Save user details\r\n        navigate(\"/dashboard\"); // Redirect to dashboard\r\n      } else {\r\n        setError(data.message || \"Invalid credentials!\");\r\n      }\r\n    } catch (err) {\r\n      setError(\"Server error! Please try again later.\");\r\n      console.error(\"Login Error:\", err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <h2>Login to CycleCare</h2>\r\n      <form onSubmit={handleLogin}>\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          required\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          required\r\n        />\r\n        {error && <p className=\"error\">{error}</p>} \r\n        <button type=\"submit\">Login</button>\r\n      </form>\r\n      <p>\r\n        Don't have an account? <span onClick={() => navigate(\"/register\")}>Register</span>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n*/\r\n\r\n\r\n\r\nimport React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n//import API_BASE_URL from \"../config\"; // Import API base URL\r\nimport \"../styles/LoginPage.css\";\r\n\r\nconst LoginPage = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\"); // To handle error messages\r\n  const navigate = useNavigate();\r\n/*\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    setError(\"\"); // Clear previous errors\r\n\r\n    try {\r\n      const response = await fetch(`${API_BASE_URL}/login`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ email, password }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        localStorage.setItem(\"token\", data.token); // Store JWT token\r\n        localStorage.setItem(\"user\", JSON.stringify(data.user)); // Store user details\r\n        navigate(\"/dashboard\"); // Redirect to Dashboard\r\n      } else {\r\n        setError(data.message || \"Invalid credentials!\"); // Display error message\r\n      }\r\n    } catch (err) {\r\n      setError(\"Something went wrong! Please try again.\");\r\n    }\r\n  };\r\n*/\r\nconst handleLogin = async (e) => {\r\n  e.preventDefault();\r\n\r\n  try {\r\n    const response = await fetch(\"http://localhost:3000/api/users/login\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ email, password }),\r\n    });\r\n\r\n    const data = await response.json();\r\n\r\n    if (response.ok) {\r\n      alert(\"Login successful!\");\r\n      localStorage.setItem(\"token\", data.token); \r\n      localStorage.setItem(\"userId\", data.userId); \r\n      navigate(\"/dashboard\");\r\n    } else {\r\n      alert(data.message); \r\n    }\r\n  } catch (error) { // Corrected: Declaring 'error' here\r\n    alert(\"Login failed: \" + error.message);\r\n    console.error(\"Error during login:\", error); // Logging the error for debugging\r\n  }\r\n};\r\n\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <h2>Login to CycleCare</h2>\r\n      <form onSubmit={handleLogin}>\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          required\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          required\r\n        />\r\n        {error && <p className=\"error\">{error}</p>} {/* Show error message */}\r\n        <button type=\"submit\">Login</button>\r\n      </form>\r\n      <p>\r\n        Don't have an account? <span onClick={() => navigate(\"/register\")}>Register</span>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}