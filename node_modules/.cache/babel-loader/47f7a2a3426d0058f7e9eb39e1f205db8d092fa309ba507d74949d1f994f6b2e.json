{"ast":null,"code":"var _jsxFileName = \"C:\\\\vardha\\\\Menstrual\\\\frontend\\\\src\\\\pages\\\\Tracker.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Calendar from \"react-calendar\";\nimport \"react-calendar/dist/Calendar.css\";\nimport \"../styles/Tracker.css\";\nimport Reports from \"./Reports\";\nimport { saveAs } from \"file-saver\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Tracker() {\n  _s();\n  const [date, setDate] = useState(new Date());\n  const [periodDates, setPeriodDates] = useState([]);\n\n  // Load stored period dates\n  useEffect(() => {\n    const savedDates = JSON.parse(localStorage.getItem(\"periodDates\"));\n    if (savedDates) {\n      setPeriodDates(savedDates);\n    }\n  }, []);\n\n  // Handle date selection\n  const handleDateChange = selectedDate => {\n    const formattedDate = selectedDate.toDateString();\n    if (!periodDates.includes(formattedDate)) {\n      const newDates = [...periodDates, formattedDate].sort((a, b) => new Date(a) - new Date(b));\n      setPeriodDates(newDates);\n      localStorage.setItem(\"periodDates\", JSON.stringify(newDates));\n      setDate(selectedDate);\n      showNotification(\"Period date logged!\");\n    }\n  };\n\n  // Delete period log\n  const deleteLog = dateToDelete => {\n    const updatedDates = periodDates.filter(d => d !== dateToDelete);\n    setPeriodDates(updatedDates);\n    localStorage.setItem(\"periodDates\", JSON.stringify(updatedDates));\n  };\n\n  // Predict next period (assuming 28-day cycle)\n  const predictNextPeriod = () => {\n    if (periodDates.length > 0) {\n      let lastPeriod = new Date(periodDates[periodDates.length - 1]);\n      let nextPeriod = new Date(lastPeriod);\n      nextPeriod.setDate(nextPeriod.getDate() + 28);\n      return nextPeriod.toDateString();\n    }\n    return \"Not enough data to predict.\";\n  };\n\n  // Calculate cycle lengths\n  const cycleLengths = periodDates.map((date, i) => i > 0 ? (new Date(date) - new Date(periodDates[i - 1])) / (1000 * 60 * 60 * 24) : null).filter(length => length !== null);\n\n  // Calculate average cycle length\n  const avgCycleLength = cycleLengths.length > 0 ? (cycleLengths.reduce((a, b) => a + b, 0) / cycleLengths.length).toFixed(1) : \"Not enough data\";\n\n  // Show browser notification\n  const showNotification = message => {\n    if (Notification.permission === \"granted\") {\n      new Notification(\"Menstrual Tracker\", {\n        body: message\n      });\n    }\n  };\n\n  // Export cycle data as CSV\n  const exportData = () => {\n    const csvContent = \"data:text/csv;charset=utf-8,Date\\n\" + periodDates.join(\"\\n\");\n    const blob = new Blob([csvContent], {\n      type: \"text/csv;charset=utf-8;\"\n    });\n    saveAs(blob, \"cycle_history.csv\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tracker-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Menstrual Cycle Tracker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n      onClickDay: handleDateChange,\n      value: date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Logged Period Dates:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: periodDates.map((d, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [d, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteLog(d),\n          children: \"\\u274E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), \"/*\\u274C*/\"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Next Predicted Period: \", predictNextPeriod()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Last Cycle Length: \", cycleLengths.length > 0 ? cycleLengths[cycleLengths.length - 1] + \" days\" : \"N/A\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Average Cycle Length: \", avgCycleLength]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: exportData,\n      children: \"\\uD83D\\uDCC2 Export Cycle Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Reports, {\n      periodDates: periodDates\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n_s(Tracker, \"w9B4/OZG7aLZWshjX394IxYSyQE=\");\n_c = Tracker;\nexport default Tracker;\nvar _c;\n$RefreshReg$(_c, \"Tracker\");","map":{"version":3,"names":["React","useState","useEffect","Calendar","Reports","saveAs","jsxDEV","_jsxDEV","Tracker","_s","date","setDate","Date","periodDates","setPeriodDates","savedDates","JSON","parse","localStorage","getItem","handleDateChange","selectedDate","formattedDate","toDateString","includes","newDates","sort","a","b","setItem","stringify","showNotification","deleteLog","dateToDelete","updatedDates","filter","d","predictNextPeriod","length","lastPeriod","nextPeriod","getDate","cycleLengths","map","i","avgCycleLength","reduce","toFixed","message","Notification","permission","body","exportData","csvContent","join","blob","Blob","type","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClickDay","value","index","onClick","_c","$RefreshReg$"],"sources":["C:/vardha/Menstrual/frontend/src/pages/Tracker.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Calendar from \"react-calendar\";\r\nimport \"react-calendar/dist/Calendar.css\";\r\nimport \"../styles/Tracker.css\";\r\nimport Reports from \"./Reports\";\r\nimport { saveAs } from \"file-saver\"; \r\n\r\nfunction Tracker() {\r\n  const [date, setDate] = useState(new Date());\r\n  const [periodDates, setPeriodDates] = useState([]);\r\n\r\n  // Load stored period dates\r\n  useEffect(() => {\r\n    const savedDates = JSON.parse(localStorage.getItem(\"periodDates\"));\r\n    if (savedDates) {\r\n      setPeriodDates(savedDates);\r\n    }\r\n  }, []);\r\n\r\n  // Handle date selection\r\n  const handleDateChange = (selectedDate) => {\r\n    const formattedDate = selectedDate.toDateString();\r\n    if (!periodDates.includes(formattedDate)) {\r\n      const newDates = [...periodDates, formattedDate].sort((a, b) => new Date(a) - new Date(b));\r\n      setPeriodDates(newDates);\r\n      localStorage.setItem(\"periodDates\", JSON.stringify(newDates));\r\n      setDate(selectedDate);\r\n      showNotification(\"Period date logged!\");\r\n    }\r\n  };\r\n\r\n  // Delete period log\r\n  const deleteLog = (dateToDelete) => {\r\n    const updatedDates = periodDates.filter((d) => d !== dateToDelete);\r\n    setPeriodDates(updatedDates);\r\n    localStorage.setItem(\"periodDates\", JSON.stringify(updatedDates));\r\n  };\r\n\r\n  // Predict next period (assuming 28-day cycle)\r\n  const predictNextPeriod = () => {\r\n    if (periodDates.length > 0) {\r\n      let lastPeriod = new Date(periodDates[periodDates.length - 1]);\r\n      let nextPeriod = new Date(lastPeriod);\r\n      nextPeriod.setDate(nextPeriod.getDate() + 28);\r\n      return nextPeriod.toDateString();\r\n    }\r\n    return \"Not enough data to predict.\";\r\n  };\r\n\r\n  // Calculate cycle lengths\r\n  const cycleLengths = periodDates.map((date, i) => \r\n    i > 0 ? (new Date(date) - new Date(periodDates[i - 1])) / (1000 * 60 * 60 * 24) : null\r\n  ).filter(length => length !== null);\r\n\r\n  // Calculate average cycle length\r\n  const avgCycleLength = cycleLengths.length > 0 ? \r\n    (cycleLengths.reduce((a, b) => a + b, 0) / cycleLengths.length).toFixed(1) \r\n    : \"Not enough data\";\r\n\r\n  // Show browser notification\r\n  const showNotification = (message) => {\r\n    if (Notification.permission === \"granted\") {\r\n      new Notification(\"Menstrual Tracker\", { body: message });\r\n    }\r\n  };\r\n\r\n  // Export cycle data as CSV\r\n  const exportData = () => {\r\n    const csvContent = \"data:text/csv;charset=utf-8,Date\\n\" + periodDates.join(\"\\n\");\r\n    const blob = new Blob([csvContent], { type: \"text/csv;charset=utf-8;\" });\r\n    saveAs(blob, \"cycle_history.csv\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"tracker-container\">\r\n      <h2>Menstrual Cycle Tracker</h2>\r\n      <Calendar onClickDay={handleDateChange} value={date} />\r\n      \r\n      <h3>Logged Period Dates:</h3>\r\n      <ul>\r\n        {periodDates.map((d, index) => (\r\n          <li key={index}>\r\n            {d} \r\n            <button onClick={() => deleteLog(d)}>‚ùé</button>\r\n            /*‚ùå*/\r\n          </li>\r\n        ))}\r\n      </ul>\r\n\r\n      <h3>Next Predicted Period: {predictNextPeriod()}</h3>\r\n      <h3>Last Cycle Length: {cycleLengths.length > 0 ? cycleLengths[cycleLengths.length - 1] + \" days\" : \"N/A\"}</h3>\r\n      <h3>Average Cycle Length: {avgCycleLength}</h3> {/* Added this line */}\r\n      \r\n      <button onClick={exportData}>üìÇ Export Cycle Data</button>\r\n\r\n      {/* Integrating Reports */}\r\n      <Reports periodDates={periodDates} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Tracker;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}