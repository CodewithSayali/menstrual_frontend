{"ast":null,"code":"var _jsxFileName = \"C:\\\\vardha\\\\Menstrual\\\\frontend\\\\src\\\\pages\\\\HealthTips.js\",\n  _s = $RefreshSig$();\n/*import React, { useState } from \"react\";\r\nimport \"../styles/HealthTips.css\";\r\n\r\nfunction HealthTips() {\r\n  const [phase, setPhase] = useState(\"\");\r\n\r\n  const tips = {\r\n    Menstrual: \"Stay hydrated and rest well. Eat iron-rich foods.\",\r\n    Follicular: \"Increase protein intake and engage in light exercise.\",\r\n    Ovulation: \"Consume omega-3s and practice relaxation techniques.\",\r\n    Luteal: \"Focus on magnesium-rich foods to ease PMS symptoms.\"\r\n  };\r\n\r\n  return (\r\n    <div className=\"tips-container\">\r\n      <h2>Health Tips</h2>\r\n      <select value={phase} onChange={(e) => setPhase(e.target.value)}>\r\n        <option value=\"\">Select Your Phase</option>\r\n        <option value=\"Menstrual\">Menstrual Phase</option>\r\n        <option value=\"Follicular\">Follicular Phase</option>\r\n        <option value=\"Ovulation\">Ovulation Phase</option>\r\n        <option value=\"Luteal\">Luteal Phase</option>\r\n      </select>\r\n      <p>{tips[phase]}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HealthTips;\r\n*/\n\nimport React, { useState } from \"react\";\nimport { FaTint, FaHeartbeat, FaStar, FaLeaf } from \"react-icons/fa\";\nimport \"../styles/HealthTips.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction HealthTips() {\n  _s();\n  const [phase, setPhase] = useState(\"\");\n  const phaseDetails = {\n    Menstrual: {\n      tip: \"Stay hydrated and rest well. Eat iron-rich foods.\",\n      foods: \"Leafy greens, lentils, red meat, dark chocolate.\",\n      exercise: \"Gentle yoga, stretching, walking.\",\n      icon: /*#__PURE__*/_jsxDEV(FaTint, {\n        size: 20,\n        color: \"red\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this)\n    },\n    Follicular: {\n      tip: \"Increase protein intake and engage in light exercise.\",\n      foods: \"Eggs, fish, nuts, avocados.\",\n      exercise: \"Strength training, cardio.\",\n      icon: /*#__PURE__*/_jsxDEV(FaHeartbeat, {\n        size: 20,\n        color: \"purple\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this)\n    },\n    Ovulation: {\n      tip: \"Consume omega-3s and practice relaxation techniques.\",\n      foods: \"Salmon, flaxseeds, walnuts.\",\n      exercise: \"High-intensity workouts, dancing.\",\n      icon: /*#__PURE__*/_jsxDEV(FaStar, {\n        size: 20,\n        color: \"gold\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this)\n    },\n    Luteal: {\n      tip: \"Focus on magnesium-rich foods to ease PMS symptoms.\",\n      foods: \"Bananas, dark chocolate, spinach.\",\n      exercise: \"Pilates, low-impact workouts.\",\n      icon: /*#__PURE__*/_jsxDEV(FaLeaf, {\n        size: 20,\n        color: \"green\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this)\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tips-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Health Tips\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: phase,\n      onChange: e => setPhase(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select Your Phase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Menstrual\",\n        children: \"Menstrual Phase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Follicular\",\n        children: \"Follicular Phase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Ovulation\",\n        children: \"Ovulation Phase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"Luteal\",\n        children: \"Luteal Phase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), phase && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tip-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [phaseDetails[phase].icon, \" \", phase, \" Phase\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Tip:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 14\n        }, this), \" \", phaseDetails[phase].tip]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Recommended Foods:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 14\n        }, this), \" \", phaseDetails[phase].foods]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Best Exercises:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 14\n        }, this), \" \", phaseDetails[phase].exercise]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(HealthTips, \"VmOeLEgi6jKNeIp/HWutJcXLDQ4=\");\n_c = HealthTips;\nexport default HealthTips;\n\n/*\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { FaTint, FaHeartbeat, FaStar, FaLeaf } from \"react-icons/fa\";\r\nimport API_BASE_URL from \"../config\"; // Import the API base URL\r\nimport \"../styles/HealthTips.css\";\r\n\r\nfunction HealthTips() {\r\n  const [phase, setPhase] = useState(\"\");\r\n  const [phaseDetails, setPhaseDetails] = useState({});\r\n\r\n  useEffect(() => {\r\n    if (phase) {\r\n      fetch(`${API_BASE_URL}/health-tips?phase=${phase}`) // Fetch from backend\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          setPhaseDetails(data);\r\n        })\r\n        .catch((error) => console.error(\"Error fetching health tips:\", error));\r\n    }\r\n  }, [phase]);\r\n\r\n  // Define icons for different phases\r\n  const phaseIcons = {\r\n    Menstrual: <FaTint size={20} color=\"red\" />,\r\n    Follicular: <FaHeartbeat size={20} color=\"purple\" />,\r\n    Ovulation: <FaStar size={20} color=\"gold\" />,\r\n    Luteal: <FaLeaf size={20} color=\"green\" />,\r\n  };\r\n\r\n  return (\r\n    <div className=\"tips-container\">\r\n      <h2>Health Tips</h2>\r\n      <select value={phase} onChange={(e) => setPhase(e.target.value)}>\r\n        <option value=\"\">Select Your Phase</option>\r\n        <option value=\"Menstrual\">Menstrual Phase</option>\r\n        <option value=\"Follicular\">Follicular Phase</option>\r\n        <option value=\"Ovulation\">Ovulation Phase</option>\r\n        <option value=\"Luteal\">Luteal Phase</option>\r\n      </select>\r\n\r\n      {phase && phaseDetails.tip && (\r\n        <div className=\"tip-details\">\r\n          <h3>{phaseIcons[phase]} {phase} Phase</h3>\r\n          <p><strong>Tip:</strong> {phaseDetails.tip}</p>\r\n          <p><strong>Recommended Foods:</strong> {phaseDetails.foods}</p>\r\n          <p><strong>Best Exercises:</strong> {phaseDetails.exercise}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HealthTips;\r\n*/\nvar _c;\n$RefreshReg$(_c, \"HealthTips\");","map":{"version":3,"names":["React","useState","FaTint","FaHeartbeat","FaStar","FaLeaf","jsxDEV","_jsxDEV","HealthTips","_s","phase","setPhase","phaseDetails","Menstrual","tip","foods","exercise","icon","size","color","fileName","_jsxFileName","lineNumber","columnNumber","Follicular","Ovulation","Luteal","className","children","value","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/vardha/Menstrual/frontend/src/pages/HealthTips.js"],"sourcesContent":["/*import React, { useState } from \"react\";\r\nimport \"../styles/HealthTips.css\";\r\n\r\nfunction HealthTips() {\r\n  const [phase, setPhase] = useState(\"\");\r\n\r\n  const tips = {\r\n    Menstrual: \"Stay hydrated and rest well. Eat iron-rich foods.\",\r\n    Follicular: \"Increase protein intake and engage in light exercise.\",\r\n    Ovulation: \"Consume omega-3s and practice relaxation techniques.\",\r\n    Luteal: \"Focus on magnesium-rich foods to ease PMS symptoms.\"\r\n  };\r\n\r\n  return (\r\n    <div className=\"tips-container\">\r\n      <h2>Health Tips</h2>\r\n      <select value={phase} onChange={(e) => setPhase(e.target.value)}>\r\n        <option value=\"\">Select Your Phase</option>\r\n        <option value=\"Menstrual\">Menstrual Phase</option>\r\n        <option value=\"Follicular\">Follicular Phase</option>\r\n        <option value=\"Ovulation\">Ovulation Phase</option>\r\n        <option value=\"Luteal\">Luteal Phase</option>\r\n      </select>\r\n      <p>{tips[phase]}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HealthTips;\r\n*/\r\n\r\n\r\nimport React, { useState } from \"react\";\r\nimport { FaTint, FaHeartbeat, FaStar, FaLeaf } from \"react-icons/fa\";\r\nimport \"../styles/HealthTips.css\";\r\n\r\nfunction HealthTips() {\r\n  const [phase, setPhase] = useState(\"\");\r\n\r\n  const phaseDetails = {\r\n    Menstrual: {\r\n      tip: \"Stay hydrated and rest well. Eat iron-rich foods.\",\r\n      foods: \"Leafy greens, lentils, red meat, dark chocolate.\",\r\n      exercise: \"Gentle yoga, stretching, walking.\",\r\n      icon: <FaTint size={20} color=\"red\" />,\r\n    },\r\n    Follicular: {\r\n      tip: \"Increase protein intake and engage in light exercise.\",\r\n      foods: \"Eggs, fish, nuts, avocados.\",\r\n      exercise: \"Strength training, cardio.\",\r\n      icon: <FaHeartbeat size={20} color=\"purple\" />,\r\n    },\r\n    Ovulation: {\r\n      tip: \"Consume omega-3s and practice relaxation techniques.\",\r\n      foods: \"Salmon, flaxseeds, walnuts.\",\r\n      exercise: \"High-intensity workouts, dancing.\",\r\n      icon: <FaStar size={20} color=\"gold\" />,\r\n    },\r\n    Luteal: {\r\n      tip: \"Focus on magnesium-rich foods to ease PMS symptoms.\",\r\n      foods: \"Bananas, dark chocolate, spinach.\",\r\n      exercise: \"Pilates, low-impact workouts.\",\r\n      icon: <FaLeaf size={20} color=\"green\" />,\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className=\"tips-container\">\r\n      <h3>Health Tips</h3>\r\n      <select value={phase} onChange={(e) => setPhase(e.target.value)}>\r\n        <option value=\"\">Select Your Phase</option>\r\n        <option value=\"Menstrual\">Menstrual Phase</option>\r\n        <option value=\"Follicular\">Follicular Phase</option>\r\n        <option value=\"Ovulation\">Ovulation Phase</option>\r\n        <option value=\"Luteal\">Luteal Phase</option>\r\n      </select>\r\n\r\n      {phase && (\r\n        <div className=\"tip-details\">\r\n          <h3>{phaseDetails[phase].icon} {phase} Phase</h3>\r\n          <p><strong>Tip:</strong> {phaseDetails[phase].tip}</p>\r\n          <p><strong>Recommended Foods:</strong> {phaseDetails[phase].foods}</p>\r\n          <p><strong>Best Exercises:</strong> {phaseDetails[phase].exercise}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HealthTips;\r\n\r\n\r\n\r\n/*\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { FaTint, FaHeartbeat, FaStar, FaLeaf } from \"react-icons/fa\";\r\nimport API_BASE_URL from \"../config\"; // Import the API base URL\r\nimport \"../styles/HealthTips.css\";\r\n\r\nfunction HealthTips() {\r\n  const [phase, setPhase] = useState(\"\");\r\n  const [phaseDetails, setPhaseDetails] = useState({});\r\n\r\n  useEffect(() => {\r\n    if (phase) {\r\n      fetch(`${API_BASE_URL}/health-tips?phase=${phase}`) // Fetch from backend\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          setPhaseDetails(data);\r\n        })\r\n        .catch((error) => console.error(\"Error fetching health tips:\", error));\r\n    }\r\n  }, [phase]);\r\n\r\n  // Define icons for different phases\r\n  const phaseIcons = {\r\n    Menstrual: <FaTint size={20} color=\"red\" />,\r\n    Follicular: <FaHeartbeat size={20} color=\"purple\" />,\r\n    Ovulation: <FaStar size={20} color=\"gold\" />,\r\n    Luteal: <FaLeaf size={20} color=\"green\" />,\r\n  };\r\n\r\n  return (\r\n    <div className=\"tips-container\">\r\n      <h2>Health Tips</h2>\r\n      <select value={phase} onChange={(e) => setPhase(e.target.value)}>\r\n        <option value=\"\">Select Your Phase</option>\r\n        <option value=\"Menstrual\">Menstrual Phase</option>\r\n        <option value=\"Follicular\">Follicular Phase</option>\r\n        <option value=\"Ovulation\">Ovulation Phase</option>\r\n        <option value=\"Luteal\">Luteal Phase</option>\r\n      </select>\r\n\r\n      {phase && phaseDetails.tip && (\r\n        <div className=\"tip-details\">\r\n          <h3>{phaseIcons[phase]} {phase} Phase</h3>\r\n          <p><strong>Tip:</strong> {phaseDetails.tip}</p>\r\n          <p><strong>Recommended Foods:</strong> {phaseDetails.foods}</p>\r\n          <p><strong>Best Exercises:</strong> {phaseDetails.exercise}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HealthTips;\r\n*/"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}