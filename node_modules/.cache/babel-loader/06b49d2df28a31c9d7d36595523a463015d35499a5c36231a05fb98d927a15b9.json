{"ast":null,"code":"var _jsxFileName = \"C:\\\\vardha\\\\Menstrual\\\\frontend\\\\src\\\\pages\\\\LoginPage.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"../styles/LoginPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const navigate = useNavigate();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login to CycleCare\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: () => navigate(\"/register\"),\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\n\n/*\r\nimport React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"../styles/LoginPage.css\";\r\n\r\nconst LoginPage = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n\r\n    // Mock authentication - Replace with API call if needed\r\n    if (email === \"test@example.com\" && password === \"password\") {\r\n      localStorage.setItem(\"user\", JSON.stringify({ email }));\r\n      navigate(\"/dashboard\"); // Redirect to Dashboard\r\n    } else {\r\n      alert(\"Invalid credentials!\"); // Show error message\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <h2>Login to CycleCare</h2>\r\n      <form onSubmit={handleLogin}>\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          required\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          required\r\n        />\r\n        <button type=\"submit\">Login</button>\r\n      </form>\r\n      <p>\r\n        Don't have an account? <span onClick={() => navigate(\"/register\")}>Register</span>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n*/\n/*import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"../styles/LoginPage.css\";\r\n\r\nconst LoginPage = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\"); // To store error messages\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    setError(\"\"); // Clear any previous errors\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:3000/login\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ email, password }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      console.log(\"Login Response:\", data); // Debugging\r\n\r\n      if (response.ok) {\r\n        localStorage.setItem(\"user\", JSON.stringify(data.user)); // Save user details\r\n        navigate(\"/dashboard\"); // Redirect to dashboard\r\n      } else {\r\n        setError(data.message || \"Invalid credentials!\");\r\n      }\r\n    } catch (err) {\r\n      setError(\"Server error! Please try again later.\");\r\n      console.error(\"Login Error:\", err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <h2>Login to CycleCare</h2>\r\n      <form onSubmit={handleLogin}>\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          required\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          required\r\n        />\r\n        {error && <p className=\"error\">{error}</p>} \r\n        <button type=\"submit\">Login</button>\r\n      </form>\r\n      <p>\r\n        Don't have an account? <span onClick={() => navigate(\"/register\")}>Register</span>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n*/\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useNavigate","jsxDEV","_jsxDEV","LoginPage","_s","navigate","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","required","onClick","_c","$RefreshReg$"],"sources":["C:/vardha/Menstrual/frontend/src/pages/LoginPage.js"],"sourcesContent":["import React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"../styles/LoginPage.css\";\r\n\r\nconst LoginPage = () => {\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <h2>Login to CycleCare</h2>\r\n      <form>\r\n        <input type=\"email\" placeholder=\"Email\" required />\r\n        <input type=\"password\" placeholder=\"Password\" required />\r\n        <button type=\"submit\">Login</button>\r\n      </form>\r\n      <p>Don't have an account? <span onClick={() => navigate(\"/register\")}>Register</span></p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n\r\n/*\r\nimport React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"../styles/LoginPage.css\";\r\n\r\nconst LoginPage = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n\r\n    // Mock authentication - Replace with API call if needed\r\n    if (email === \"test@example.com\" && password === \"password\") {\r\n      localStorage.setItem(\"user\", JSON.stringify({ email }));\r\n      navigate(\"/dashboard\"); // Redirect to Dashboard\r\n    } else {\r\n      alert(\"Invalid credentials!\"); // Show error message\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <h2>Login to CycleCare</h2>\r\n      <form onSubmit={handleLogin}>\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          required\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          required\r\n        />\r\n        <button type=\"submit\">Login</button>\r\n      </form>\r\n      <p>\r\n        Don't have an account? <span onClick={() => navigate(\"/register\")}>Register</span>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n*/\r\n/*import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"../styles/LoginPage.css\";\r\n\r\nconst LoginPage = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\"); // To store error messages\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    setError(\"\"); // Clear any previous errors\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:3000/login\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ email, password }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      console.log(\"Login Response:\", data); // Debugging\r\n\r\n      if (response.ok) {\r\n        localStorage.setItem(\"user\", JSON.stringify(data.user)); // Save user details\r\n        navigate(\"/dashboard\"); // Redirect to dashboard\r\n      } else {\r\n        setError(data.message || \"Invalid credentials!\");\r\n      }\r\n    } catch (err) {\r\n      setError(\"Server error! Please try again later.\");\r\n      console.error(\"Login Error:\", err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <h2>Login to CycleCare</h2>\r\n      <form onSubmit={handleLogin}>\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          required\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          required\r\n        />\r\n        {error && <p className=\"error\">{error}</p>} \r\n        <button type=\"submit\">Login</button>\r\n      </form>\r\n      <p>\r\n        Don't have an account? <span onClick={() => navigate(\"/register\")}>Register</span>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n*/"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAE9B,oBACEE,OAAA;IAAKI,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC9BL,OAAA;MAAAK,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3BT,OAAA;MAAAK,QAAA,gBACEL,OAAA;QAAOU,IAAI,EAAC,OAAO;QAACC,WAAW,EAAC,OAAO;QAACC,QAAQ;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACnDT,OAAA;QAAOU,IAAI,EAAC,UAAU;QAACC,WAAW,EAAC,UAAU;QAACC,QAAQ;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACzDT,OAAA;QAAQU,IAAI,EAAC,QAAQ;QAAAL,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC,eACPT,OAAA;MAAAK,QAAA,GAAG,yBAAuB,eAAAL,OAAA;QAAMa,OAAO,EAAEA,CAAA,KAAMV,QAAQ,CAAC,WAAW,CAAE;QAAAE,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtF,CAAC;AAEV,CAAC;AAACP,EAAA,CAdID,SAAS;EAAA,QACIH,WAAW;AAAA;AAAAgB,EAAA,GADxBb,SAAS;AAgBf,eAAeA,SAAS;;AAExjEA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}