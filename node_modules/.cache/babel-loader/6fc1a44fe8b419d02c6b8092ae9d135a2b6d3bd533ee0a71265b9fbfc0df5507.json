{"ast":null,"code":"var _jsxFileName = \"C:\\\\vardha\\\\Menstrual\\\\frontend\\\\src\\\\pages\\\\RegisterPage.js\",\n  _s = $RefreshSig$();\n/*import React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"../styles/RegisterPage.css\";\r\n\r\nconst RegisterPage = () => {\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <div className=\"register-container\">\r\n      <h2>Register for CycleCare</h2>\r\n      <form>\r\n        <input type=\"text\" placeholder=\"Full Name\" required />\r\n        <input type=\"email\" placeholder=\"Email\" required />\r\n        <input type=\"password\" placeholder=\"Password\" required />\r\n        <button type=\"submit\">Register</button>\r\n      </form>\r\n      <p>Already have an account? <span onClick={() => navigate(\"/login\")}>Login</span></p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterPage;\r\n*/\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"../styles/RegisterPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegisterPage = () => {\n  _s();\n  const [fullName, setFullName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const navigate = useNavigate();\n  /*\r\n    const handleRegister = (e) => {\r\n      e.preventDefault();\r\n  \r\n      // Store user data in localStorage (Replace with API call if needed)\r\n      localStorage.setItem(\"user\", JSON.stringify({ fullName, email }));\r\n      navigate(\"/dashboard\"); // Redirect to Dashboard\r\n    };\r\n    */\n  const handleRegister = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch(\"http://localhost:5000/api/users/register\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          name: fullName,\n          email,\n          password\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        // Store the token in local storage\n        localStorage.setItem(\"token\", data.token);\n        alert(\"Registration successful!\");\n        navigate(\"/dashboard\"); // Redirect to Dashboard\n      } else {\n        alert(data.message);\n      }\n    } catch (error) {\n      alert(\"An error occurred during registration.\");\n      console.error(\"Registration error:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Register for CycleCare\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleRegister,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Full Name\",\n        value: fullName,\n        onChange: e => setFullName(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: () => navigate(\"/login\"),\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(RegisterPage, \"5dG/jskRSRB3LpcPwEJUb1DJHDQ=\", false, function () {\n  return [useNavigate];\n});\n_c = RegisterPage;\nexport default RegisterPage;\nvar _c;\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","RegisterPage","_s","fullName","setFullName","email","setEmail","password","setPassword","navigate","handleRegister","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","name","data","json","ok","localStorage","setItem","token","alert","message","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","onClick","_c","$RefreshReg$"],"sources":["C:/vardha/Menstrual/frontend/src/pages/RegisterPage.js"],"sourcesContent":["/*import React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"../styles/RegisterPage.css\";\r\n\r\nconst RegisterPage = () => {\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <div className=\"register-container\">\r\n      <h2>Register for CycleCare</h2>\r\n      <form>\r\n        <input type=\"text\" placeholder=\"Full Name\" required />\r\n        <input type=\"email\" placeholder=\"Email\" required />\r\n        <input type=\"password\" placeholder=\"Password\" required />\r\n        <button type=\"submit\">Register</button>\r\n      </form>\r\n      <p>Already have an account? <span onClick={() => navigate(\"/login\")}>Login</span></p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterPage;\r\n*/\r\nimport React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"../styles/RegisterPage.css\";\r\n\r\nconst RegisterPage = () => {\r\n  const [fullName, setFullName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const navigate = useNavigate();\r\n/*\r\n  const handleRegister = (e) => {\r\n    e.preventDefault();\r\n\r\n    // Store user data in localStorage (Replace with API call if needed)\r\n    localStorage.setItem(\"user\", JSON.stringify({ fullName, email }));\r\n    navigate(\"/dashboard\"); // Redirect to Dashboard\r\n  };\r\n  */\r\n  const handleRegister = async (e) => {\r\n    e.preventDefault();\r\n  \r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/api/users/register\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ name: fullName, email, password }),\r\n      });\r\n  \r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        // Store the token in local storage\r\n        localStorage.setItem(\"token\", data.token);\r\n        alert(\"Registration successful!\");\r\n        navigate(\"/dashboard\"); // Redirect to Dashboard\r\n      } else {\r\n        alert(data.message);\r\n      }\r\n    } catch (error) {\r\n      alert(\"An error occurred during registration.\");\r\n      console.error(\"Registration error:\", error);\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <div className=\"register-container\">\r\n      <h2>Register for CycleCare</h2>\r\n      <form onSubmit={handleRegister}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Full Name\"\r\n          value={fullName}\r\n          onChange={(e) => setFullName(e.target.value)}\r\n          required\r\n        />\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          required\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          required\r\n        />\r\n        <button type=\"submit\">Register</button>\r\n      </form>\r\n      <p>\r\n        Already have an account? <span onClick={() => navigate(\"/login\")}>Login</span>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}