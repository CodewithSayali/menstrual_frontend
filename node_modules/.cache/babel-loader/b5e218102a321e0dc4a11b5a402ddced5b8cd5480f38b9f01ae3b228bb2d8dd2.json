{"ast":null,"code":"/*import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../styles/Navbar.css\";\r\n\r\nfunction Navbar() {\r\n  return (\r\n    <nav className=\"navbar\">\r\n      <h2>CycleCare</h2>\r\n      <ul>\r\n        <li><Link to=\"/\">Dashboard</Link></li>\r\n        <li><Link to=\"/tracker\">Tracker</Link></li>\r\n        <li><Link to=\"/mood-tracker\">Mood Tracker</Link></li>\r\n        <li><Link to=\"/health-tips\">Health Tips</Link></li>\r\n        <li><Link to=\"/reminders\">Reminders</Link></li>\r\n        <li><Link to=\"/reports\">Reports</Link></li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n*/\n/*import React from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport \"../styles/Navbar.css\";\r\n\r\nfunction Navbar() {\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem(\"user\"); // Clear user session\r\n    navigate(\"/\", { replace: true }); // Redirect to splash screen and prevent back navigation\r\n    window.location.reload(); // Force page reload to clear session completely\r\n  };\r\n\r\n  return (\r\n    <nav className=\"navbar\">\r\n      <h2>CycleCare</h2>\r\n      <ul>\r\n        <li><Link to=\"/dashboard\">Dashboard</Link></li>\r\n        <li><Link to=\"/tracker\">Tracker</Link></li>\r\n        <li><Link to=\"/mood-tracker\">Mood Tracker</Link></li>\r\n        <li><Link to=\"/health-tips\">Health Tips</Link></li>\r\n        <li><Link to=\"/reminders\">Reminders</Link></li>\r\n        <li><Link to=\"/reports\">Reports</Link></li>\r\n        <li><button className=\"logout-btn\" onClick={handleLogout}>Logout</button></li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n*/\n\n/*final\r\nimport React, { useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport \"../styles/Navbar.css\";\r\n\r\nfunction Navbar() {\r\n  const navigate = useNavigate();\r\n  const [searchVisible, setSearchVisible] = useState(false);\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem(\"user\"); // Clear user session\r\n    navigate(\"/\", { replace: true }); // Redirect to splash screen and prevent back navigation\r\n    window.location.reload(); // Force page reload to clear session completely\r\n  };\r\n\r\n  const toggleSearch = () => {\r\n    setSearchVisible(!searchVisible);\r\n  };\r\n\r\n  const handleSearchChange = (e) => {\r\n    setSearchQuery(e.target.value);\r\n  };\r\n\r\n  const handleSearch = (e) => {\r\n    e.preventDefault();\r\n    // Implement search action here\r\n    console.log(\"Searching for:\", searchQuery);\r\n    setSearchQuery(\"\");\r\n    setSearchVisible(false); // Hide search after searching\r\n  };\r\n\r\n  return (\r\n    <nav className=\"navbar\">\r\n      <h2>CycleCare</h2>\r\n      <div className=\"navbar-actions\">\r\n        <button className=\"search-btn\" onClick={toggleSearch}>\r\n          Search\r\n        </button>\r\n        {searchVisible && (\r\n          <form onSubmit={handleSearch} className=\"search-form\">\r\n            <input\r\n              type=\"text\"\r\n              value={searchQuery}\r\n              onChange={handleSearchChange}\r\n              placeholder=\"Search...\"\r\n              className=\"search-input\"\r\n            />\r\n          </form>\r\n        )}\r\n        <button className=\"logout-btn\" onClick={handleLogout}>Logout</button>\r\n      </div>\r\n      <ul>\r\n        <li><Link to=\"/dashboard\">Dashboard</Link></li>\r\n        <li><Link to=\"/tracker\">Tracker</Link></li>\r\n        <li><Link to=\"/mood-tracker\">Mood Tracker</Link></li>\r\n        <li><Link to=\"/health-tips\">Health Tips</Link></li>\r\n        <li><Link to=\"/reminders\">Reminders</Link></li>\r\n        <li><Link to=\"/reports\">Reports</Link></li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n  */\n\nexport default Navbar;","map":{"version":3,"names":["Navbar"],"sources":["C:/vardha/Menstrual/frontend/src/components/Navbar.js"],"sourcesContent":["/*import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../styles/Navbar.css\";\r\n\r\nfunction Navbar() {\r\n  return (\r\n    <nav className=\"navbar\">\r\n      <h2>CycleCare</h2>\r\n      <ul>\r\n        <li><Link to=\"/\">Dashboard</Link></li>\r\n        <li><Link to=\"/tracker\">Tracker</Link></li>\r\n        <li><Link to=\"/mood-tracker\">Mood Tracker</Link></li>\r\n        <li><Link to=\"/health-tips\">Health Tips</Link></li>\r\n        <li><Link to=\"/reminders\">Reminders</Link></li>\r\n        <li><Link to=\"/reports\">Reports</Link></li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n*/\r\n/*import React from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport \"../styles/Navbar.css\";\r\n\r\nfunction Navbar() {\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem(\"user\"); // Clear user session\r\n    navigate(\"/\", { replace: true }); // Redirect to splash screen and prevent back navigation\r\n    window.location.reload(); // Force page reload to clear session completely\r\n  };\r\n\r\n  return (\r\n    <nav className=\"navbar\">\r\n      <h2>CycleCare</h2>\r\n      <ul>\r\n        <li><Link to=\"/dashboard\">Dashboard</Link></li>\r\n        <li><Link to=\"/tracker\">Tracker</Link></li>\r\n        <li><Link to=\"/mood-tracker\">Mood Tracker</Link></li>\r\n        <li><Link to=\"/health-tips\">Health Tips</Link></li>\r\n        <li><Link to=\"/reminders\">Reminders</Link></li>\r\n        <li><Link to=\"/reports\">Reports</Link></li>\r\n        <li><button className=\"logout-btn\" onClick={handleLogout}>Logout</button></li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n*/\r\n\r\n\r\n/*final\r\nimport React, { useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport \"../styles/Navbar.css\";\r\n\r\nfunction Navbar() {\r\n  const navigate = useNavigate();\r\n  const [searchVisible, setSearchVisible] = useState(false);\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem(\"user\"); // Clear user session\r\n    navigate(\"/\", { replace: true }); // Redirect to splash screen and prevent back navigation\r\n    window.location.reload(); // Force page reload to clear session completely\r\n  };\r\n\r\n  const toggleSearch = () => {\r\n    setSearchVisible(!searchVisible);\r\n  };\r\n\r\n  const handleSearchChange = (e) => {\r\n    setSearchQuery(e.target.value);\r\n  };\r\n\r\n  const handleSearch = (e) => {\r\n    e.preventDefault();\r\n    // Implement search action here\r\n    console.log(\"Searching for:\", searchQuery);\r\n    setSearchQuery(\"\");\r\n    setSearchVisible(false); // Hide search after searching\r\n  };\r\n\r\n  return (\r\n    <nav className=\"navbar\">\r\n      <h2>CycleCare</h2>\r\n      <div className=\"navbar-actions\">\r\n        <button className=\"search-btn\" onClick={toggleSearch}>\r\n          Search\r\n        </button>\r\n        {searchVisible && (\r\n          <form onSubmit={handleSearch} className=\"search-form\">\r\n            <input\r\n              type=\"text\"\r\n              value={searchQuery}\r\n              onChange={handleSearchChange}\r\n              placeholder=\"Search...\"\r\n              className=\"search-input\"\r\n            />\r\n          </form>\r\n        )}\r\n        <button className=\"logout-btn\" onClick={handleLogout}>Logout</button>\r\n      </div>\r\n      <ul>\r\n        <li><Link to=\"/dashboard\">Dashboard</Link></li>\r\n        <li><Link to=\"/tracker\">Tracker</Link></li>\r\n        <li><Link to=\"/mood-tracker\">Mood Tracker</Link></li>\r\n        <li><Link to=\"/health-tips\">Health Tips</Link></li>\r\n        <li><Link to=\"/reminders\">Reminders</Link></li>\r\n        <li><Link to=\"/reports\">Reports</Link></li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n  */\r\n\r\nexport default Navbar;\r\n"],"mappingseAAeA,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}