{"ast":null,"code":"var _jsxFileName = \"C:\\\\vardha\\\\Menstrual\\\\frontend\\\\src\\\\pages\\\\Reports.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Line } from \"react-chartjs-2\";\nimport \"../styles/Reports.css\";\nimport \"chart.js/auto\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Reports({\n  periodDates\n}) {\n  // Ensure periodDates is an array\n  const datesArray = Array.isArray(periodDates) ? periodDates : [];\n\n  // Convert dates to cycle lengths\n  const cycleLengths = datesArray.map((date, i) => i > 0 ? (new Date(date) - new Date(datesArray[i - 1])) / (1000 * 60 * 60 * 24) : null).filter(length => length !== null);\n\n  // Calculate average cycle length\n  const avgCycleLength = cycleLengths.length > 0 ? (cycleLengths.reduce((a, b) => a + b, 0) / cycleLengths.length).toFixed(1) : \"Not enough data\";\n\n  // Graph data\n  const chartData = {\n    labels: datesArray.slice(1).map(date => new Date(date).toDateString()),\n    // X-axis labels (dates)\n    datasets: [{\n      label: \"Cycle Length (days)\",\n      data: cycleLengths,\n      // Y-axis values\n      fill: false,\n      backgroundColor: \"#ff4d6d\",\n      borderColor: \"#ff4d6d\"\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reports-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Cycle Reports\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Average Cycle Length: \", avgCycleLength, \" days\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-container\",\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: chartData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n// Add default props to ensure periodDates is always an array\n_c = Reports;\nReports.defaultProps = {\n  periodDates: []\n};\n\n// Add prop types to validate periodDates\nReports.propTypes = {\n  periodDates: PropTypes.arrayOf(PropTypes.string)\n};\nexport default Reports;\nvar _c;\n$RefreshReg$(_c, \"Reports\");","map":{"version":3,"names":["React","PropTypes","Line","jsxDEV","_jsxDEV","Reports","periodDates","datesArray","Array","isArray","cycleLengths","map","date","i","Date","filter","length","avgCycleLength","reduce","a","b","toFixed","chartData","labels","slice","toDateString","datasets","label","data","fill","backgroundColor","borderColor","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","defaultProps","propTypes","arrayOf","string","$RefreshReg$"],"sources":["C:/vardha/Menstrual/frontend/src/pages/Reports.js"],"sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport \"../styles/Reports.css\";\r\nimport \"chart.js/auto\";\r\n\r\nfunction Reports({ periodDates }) {\r\n  // Ensure periodDates is an array\r\n  const datesArray = Array.isArray(periodDates) ? periodDates : [];\r\n\r\n  // Convert dates to cycle lengths\r\n  const cycleLengths = datesArray.map((date, i) => \r\n    i > 0 ? (new Date(date) - new Date(datesArray[i - 1])) / (1000 * 60 * 60 * 24) : null\r\n  ).filter(length => length !== null);\r\n\r\n  // Calculate average cycle length\r\n  const avgCycleLength = cycleLengths.length > 0 ? \r\n    (cycleLengths.reduce((a, b) => a + b, 0) / cycleLengths.length).toFixed(1) \r\n    : \"Not enough data\";\r\n\r\n  // Graph data\r\n  const chartData = {\r\n    labels: datesArray.slice(1).map(date => new Date(date).toDateString()), // X-axis labels (dates)\r\n    datasets: [{\r\n      label: \"Cycle Length (days)\",\r\n      data: cycleLengths, // Y-axis values\r\n      fill: false,\r\n      backgroundColor: \"#ff4d6d\",\r\n      borderColor: \"#ff4d6d\"\r\n    }]\r\n  };\r\n\r\n  return (\r\n    <div className=\"reports-container\">\r\n      <h2>Cycle Reports</h2>\r\n      <h3>Average Cycle Length: {avgCycleLength} days</h3>\r\n\r\n      <div className=\"chart-container\">\r\n        <Line data={chartData} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// Add default props to ensure periodDates is always an array\r\nReports.defaultProps = {\r\n  periodDates: [],\r\n};\r\n\r\n// Add prop types to validate periodDates\r\nReports.propTypes = {\r\n  periodDates: PropTypes.arrayOf(PropTypes.string),\r\n};\r\n\r\nexport default Reports;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,IAAI,QAAQ,iBAAiB;AACtC,OAAO,uBAAuB;AAC9B,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,SAASC,OAAOA,CAAC;EAAEC;AAAY,CAAC,EAAE;EAChC;EACA,MAAMC,UAAU,GAAGC,KAAK,CAACC,OAAO,CAACH,WAAW,CAAC,GAAGA,WAAW,GAAG,EAAE;;EAEhE;EACA,MAAMI,YAAY,GAAGH,UAAU,CAACI,GAAG,CAAC,CAACC,IAAI,EAAEC,CAAC,KAC1CA,CAAC,GAAG,CAAC,GAAG,CAAC,IAAIC,IAAI,CAACF,IAAI,CAAC,GAAG,IAAIE,IAAI,CAACP,UAAU,CAACM,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,GAAG,IACnF,CAAC,CAACE,MAAM,CAACC,MAAM,IAAIA,MAAM,KAAK,IAAI,CAAC;;EAEnC;EACA,MAAMC,cAAc,GAAGP,YAAY,CAACM,MAAM,GAAG,CAAC,GAC5C,CAACN,YAAY,CAACQ,MAAM,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,GAAGC,CAAC,EAAE,CAAC,CAAC,GAAGV,YAAY,CAACM,MAAM,EAAEK,OAAO,CAAC,CAAC,CAAC,GACxE,iBAAiB;;EAErB;EACA,MAAMC,SAAS,GAAG;IAChBC,MAAM,EAAEhB,UAAU,CAACiB,KAAK,CAAC,CAAC,CAAC,CAACb,GAAG,CAACC,IAAI,IAAI,IAAIE,IAAI,CAACF,IAAI,CAAC,CAACa,YAAY,CAAC,CAAC,CAAC;IAAE;IACxEC,QAAQ,EAAE,CAAC;MACTC,KAAK,EAAE,qBAAqB;MAC5BC,IAAI,EAAElB,YAAY;MAAE;MACpBmB,IAAI,EAAE,KAAK;MACXC,eAAe,EAAE,SAAS;MAC1BC,WAAW,EAAE;IACf,CAAC;EACH,CAAC;EAED,oBACE3B,OAAA;IAAK4B,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAChC7B,OAAA;MAAA6B,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBjC,OAAA;MAAA6B,QAAA,GAAI,wBAAsB,EAAChB,cAAc,EAAC,OAAK;IAAA;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEpDjC,OAAA;MAAK4B,SAAS,EAAC,iBAAiB;MAAAC,QAAA,eAC9B7B,OAAA,CAACF,IAAI;QAAC0B,IAAI,EAAEN;MAAU;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;;AAEA;AAAAC,EAAA,GAtCSjC,OAAO;AAuChBA,OAAO,CAACkC,YAAY,GAAG;EACrBjC,WAAW,EAAE;AACf,CAAC;;AAED;AACAD,OAAO,CAACmC,SAAS,GAAG;EAClBlC,WAAW,EAAEL,SAAS,CAACwC,OAAO,CAACxC,SAAS,CAACyC,MAAM;AACjD,CAAC;AAED,eAAerC,OAAO;AAAC,IAAAiC,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}