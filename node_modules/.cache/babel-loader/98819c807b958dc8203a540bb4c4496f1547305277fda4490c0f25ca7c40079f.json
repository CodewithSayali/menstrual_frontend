{"ast":null,"code":"/*import React, { useState } from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport { Chart, registerables } from 'chart.js';\r\nimport \"../styles/MoodTracker.css\";\r\n\r\n// Register all Chart.js components\r\nChart.register(...registerables);\r\n\r\nfunction MoodTracker() {\r\n  const [moodData, setMoodData] = useState([]);\r\n  const [mood, setMood] = useState(\"\");\r\n\r\n  // Handle mood selection\r\n  const handleMoodSubmit = () => {\r\n    const newMoodData = [...moodData, { mood, date: new Date().toLocaleDateString() }];\r\n    setMoodData(newMoodData);\r\n    setMood(\"\");\r\n  };\r\n\r\n  // Prepare data for graph\r\n  const chartData = {\r\n    labels: moodData.map(entry => entry.date),\r\n    datasets: [\r\n      {\r\n        label: \"Mood Trends\",\r\n        data: moodData.map(entry => (entry.mood === \"Happy\" ? 1 : entry.mood === \"Sad\" ? -1 : 0)),\r\n        backgroundColor: [\"#ff4d6d\"],\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div className=\"mood-container\">\r\n      <h2>Mood Tracker</h2>\r\n      <select value={mood} onChange={(e) => setMood(e.target.value)}>\r\n        <option value=\"\">Select Mood</option>\r\n        <option value=\"Happy\">üòä Happy</option>\r\n        <option value=\"Sad\">üò¢ Sad</option>\r\n        <option value=\"Stressed\">üòñ Stressed</option>\r\n        <option value=\"Energetic\">‚ö° Energetic</option>\r\n      </select>\r\n      <button onClick={handleMoodSubmit}>Log Mood</button>\r\n      <Bar data={chartData} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MoodTracker;\r\n*/\n\n/*\r\nimport { useState } from \"react\";\r\n\r\nconst moods = [\"üòä\", \"üò¢\", \"üò°\", \"üò¥\", \"üòÅ\"];\r\n\r\nexport default function MoodTracker() {\r\n  const [selectedMood, setSelectedMood] = useState(null);\r\n\r\n  return (\r\n    <div>\r\n      <h3>How do you feel today?</h3>\r\n      <div>\r\n        {moods.map((mood, index) => (\r\n          <button key={index} onClick={() => setSelectedMood(mood)}>\r\n            {mood}\r\n          </button>\r\n        ))}\r\n      </div>\r\n      {selectedMood && <p>You selected: {selectedMood}</p>}\r\n    </div>\r\n  );\r\n}\r\n*/\n\n/*import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\"; \r\n\r\nconst moods = [\"üòä\", \"üò¢\", \"üò°\", \"üò¥\", \"üòÅ\"];\r\nconst userId = \"123456\"; // Replace with actual user ID from authentication\r\n\r\nexport default function MoodTracker() {\r\n  const [selectedMood, setSelectedMood] = useState(null);\r\n  const [moodHistory, setMoodHistory] = useState([]);\r\n\r\n  // Fetch mood history from MongoDB\r\n  useEffect(() => {\r\n    axios.get(`http://localhost:5000/moods/${userId}/history`)\r\n      .then((response) => setMoodHistory(response.data))\r\n      .catch((error) => console.error(\"Error fetching mood history:\", error));\r\n  }, []);\r\n\r\n  // Save selected mood in MongoDB\r\n  const handleMoodSelect = async (mood) => {\r\n    setSelectedMood(mood);\r\n    try {\r\n      await axios.post(\"http://localhost:5000/moods/add\", { userId, mood });\r\n      setMoodHistory([...moodHistory, { date: new Date().toISOString(), mood }].slice(-7)); // Update UI\r\n    } catch (error) {\r\n      console.error(\"Error saving mood:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>How do you feel today?</h3>\r\n      <div>\r\n        {moods.map((mood, index) => (\r\n          <button key={index} onClick={() => handleMoodSelect(mood)}>\r\n            {mood}\r\n          </button>\r\n        ))}\r\n      </div>\r\n      {selectedMood && <p>Today's Mood: {selectedMood}</p>}\r\n\r\n      <h3>Mood History (Last 7 Days):</h3>\r\n      <ul>\r\n        {moodHistory.map((entry, index) => (\r\n          <li key={index}>\r\n            {new Date(entry.date).toDateString()}: {entry.mood}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n*/\n/*\r\nimport { useState } from \"react\";\r\n\r\nconst moods = [\"üòä\", \"üò¢\", \"üò°\", \"üò¥\", \"üòÅ\"];\r\n\r\nexport default function MoodTracker() {\r\n  const [selectedMood, setSelectedMood] = useState(null);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const logMood = async (mood) => {\r\n    const date = new Date().toISOString(); // Convert to a proper date format\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:3000/moods/log\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`, // Send auth token if required\r\n        },\r\n        body: JSON.stringify({ mood, date }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        setMessage(\"Mood logged successfully!\");\r\n      } else {\r\n        setMessage(data.message || \"Failed to log mood.\");\r\n      }\r\n    } catch (error) {\r\n      setMessage(\"Error logging mood.\");\r\n    }\r\n\r\n    setSelectedMood(mood);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>How do you feel today?</h3>\r\n      <div>\r\n        {moods.map((mood, index) => (\r\n          <button key={index} onClick={() => logMood(mood)}>\r\n            {mood}\r\n          </button>\r\n        ))}\r\n      </div>\r\n      {selectedMood && <p>You selected: {selectedMood}</p>}\r\n      {message && <p>{message}</p>}\r\n    </div>\r\n  );\r\n}\r\n*/","map":{"version":3,"names":[],"sources":["C:/vardha/Menstrual/frontend/src/pages/MoodTracker.js"],"sourcesContent":["/*import React, { useState } from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport { Chart, registerables } from 'chart.js';\r\nimport \"../styles/MoodTracker.css\";\r\n\r\n// Register all Chart.js components\r\nChart.register(...registerables);\r\n\r\nfunction MoodTracker() {\r\n  const [moodData, setMoodData] = useState([]);\r\n  const [mood, setMood] = useState(\"\");\r\n\r\n  // Handle mood selection\r\n  const handleMoodSubmit = () => {\r\n    const newMoodData = [...moodData, { mood, date: new Date().toLocaleDateString() }];\r\n    setMoodData(newMoodData);\r\n    setMood(\"\");\r\n  };\r\n\r\n  // Prepare data for graph\r\n  const chartData = {\r\n    labels: moodData.map(entry => entry.date),\r\n    datasets: [\r\n      {\r\n        label: \"Mood Trends\",\r\n        data: moodData.map(entry => (entry.mood === \"Happy\" ? 1 : entry.mood === \"Sad\" ? -1 : 0)),\r\n        backgroundColor: [\"#ff4d6d\"],\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div className=\"mood-container\">\r\n      <h2>Mood Tracker</h2>\r\n      <select value={mood} onChange={(e) => setMood(e.target.value)}>\r\n        <option value=\"\">Select Mood</option>\r\n        <option value=\"Happy\">üòä Happy</option>\r\n        <option value=\"Sad\">üò¢ Sad</option>\r\n        <option value=\"Stressed\">üòñ Stressed</option>\r\n        <option value=\"Energetic\">‚ö° Energetic</option>\r\n      </select>\r\n      <button onClick={handleMoodSubmit}>Log Mood</button>\r\n      <Bar data={chartData} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MoodTracker;\r\n*/\r\n\r\n/*\r\nimport { useState } from \"react\";\r\n\r\nconst moods = [\"üòä\", \"üò¢\", \"üò°\", \"üò¥\", \"üòÅ\"];\r\n\r\nexport default function MoodTracker() {\r\n  const [selectedMood, setSelectedMood] = useState(null);\r\n\r\n  return (\r\n    <div>\r\n      <h3>How do you feel today?</h3>\r\n      <div>\r\n        {moods.map((mood, index) => (\r\n          <button key={index} onClick={() => setSelectedMood(mood)}>\r\n            {mood}\r\n          </button>\r\n        ))}\r\n      </div>\r\n      {selectedMood && <p>You selected: {selectedMood}</p>}\r\n    </div>\r\n  );\r\n}\r\n*/\r\n\r\n/*import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\"; \r\n\r\nconst moods = [\"üòä\", \"üò¢\", \"üò°\", \"üò¥\", \"üòÅ\"];\r\nconst userId = \"123456\"; // Replace with actual user ID from authentication\r\n\r\nexport default function MoodTracker() {\r\n  const [selectedMood, setSelectedMood] = useState(null);\r\n  const [moodHistory, setMoodHistory] = useState([]);\r\n\r\n  // Fetch mood history from MongoDB\r\n  useEffect(() => {\r\n    axios.get(`http://localhost:5000/moods/${userId}/history`)\r\n      .then((response) => setMoodHistory(response.data))\r\n      .catch((error) => console.error(\"Error fetching mood history:\", error));\r\n  }, []);\r\n\r\n  // Save selected mood in MongoDB\r\n  const handleMoodSelect = async (mood) => {\r\n    setSelectedMood(mood);\r\n    try {\r\n      await axios.post(\"http://localhost:5000/moods/add\", { userId, mood });\r\n      setMoodHistory([...moodHistory, { date: new Date().toISOString(), mood }].slice(-7)); // Update UI\r\n    } catch (error) {\r\n      console.error(\"Error saving mood:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>How do you feel today?</h3>\r\n      <div>\r\n        {moods.map((mood, index) => (\r\n          <button key={index} onClick={() => handleMoodSelect(mood)}>\r\n            {mood}\r\n          </button>\r\n        ))}\r\n      </div>\r\n      {selectedMood && <p>Today's Mood: {selectedMood}</p>}\r\n\r\n      <h3>Mood History (Last 7 Days):</h3>\r\n      <ul>\r\n        {moodHistory.map((entry, index) => (\r\n          <li key={index}>\r\n            {new Date(entry.date).toDateString()}: {entry.mood}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n*/\r\n/*\r\nimport { useState } from \"react\";\r\n\r\nconst moods = [\"üòä\", \"üò¢\", \"üò°\", \"üò¥\", \"üòÅ\"];\r\n\r\nexport default function MoodTracker() {\r\n  const [selectedMood, setSelectedMood] = useState(null);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const logMood = async (mood) => {\r\n    const date = new Date().toISOString(); // Convert to a proper date format\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:3000/moods/log\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`, // Send auth token if required\r\n        },\r\n        body: JSON.stringify({ mood, date }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        setMessage(\"Mood logged successfully!\");\r\n      } else {\r\n        setMessage(data.message || \"Failed to log mood.\");\r\n      }\r\n    } catch (error) {\r\n      setMessage(\"Error logging mood.\");\r\n    }\r\n\r\n    setSelectedMood(mood);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>How do you feel today?</h3>\r\n      <div>\r\n        {moods.map((mood, index) => (\r\n          <button key={index} onClick={() => logMood(mood)}>\r\n            {mood}\r\n          </button>\r\n        ))}\r\n      </div>\r\n      {selectedMood && <p>You selected: {selectedMood}</p>}\r\n      {message && <p>{message}</p>}\r\n    </div>\r\n  );\r\n}\r\n*/\r\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}