{"ast":null,"code":"var _jsxFileName = \"C:\\\\vardha\\\\Menstrual\\\\frontend\\\\src\\\\pages\\\\Reminders.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"../styles/Reminders.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Reminders() {\n  _s();\n  const [reminders, setReminders] = useState([]);\n  const [newReminder, setNewReminder] = useState({\n    date: \"\",\n    time: \"\",\n    note: \"\"\n  });\n  const handleInputChange = e => {\n    setNewReminder({\n      ...newReminder,\n      [e.target.name]: e.target.value\n    });\n  };\n  const addReminder = () => {\n    if (newReminder.date && newReminder.time && newReminder.note) {\n      const newList = [...reminders, newReminder];\n      setReminders(newList);\n      localStorage.setItem(\"reminders\", JSON.stringify(newList));\n      setNewReminder({\n        date: \"\",\n        time: \"\",\n        note: \"\"\n      });\n      showNotification(`Reminder set for ${newReminder.date} at ${newReminder.time}`);\n    }\n  };\n  const deleteReminder = index => {\n    const updatedReminders = reminders.filter((_, i) => i !== index);\n    setReminders(updatedReminders);\n    localStorage.setItem(\"reminders\", JSON.stringify(updatedReminders));\n  };\n  const showNotification = message => {\n    if (Notification.permission === \"granted\") {\n      new Notification(\"Menstrual Tracker\", {\n        body: message\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reminders-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Reminders\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reminder-inputs\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        name: \"date\",\n        value: newReminder.date,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"time\",\n        name: \"time\",\n        value: newReminder.time,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"note\",\n        placeholder: \"Reminder note...\",\n        value: newReminder.note,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addReminder,\n        children: \"Add Reminder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Scheduled Reminders:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: reminders.map((reminder, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [reminder.date, \" at \", reminder.time, \" - \", reminder.note, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteReminder(index),\n          children: \"\\u274C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(Reminders, \"jjHNdr++dM6OSffDEYeishLVYnk=\");\n_c = Reminders;\nexport default Reminders;\n\n/*\r\nimport { useState } from \"react\";\r\n\r\nexport default function Reminders() {\r\n  const [reminders, setReminders] = useState([]);\r\n  const [newReminder, setNewReminder] = useState(\"\");\r\n\r\n  const addReminder = () => {\r\n    if (newReminder.trim() !== \"\") {\r\n      setReminders([...reminders, newReminder]);\r\n      setNewReminder(\"\");\r\n    }\r\n  };\r\n\r\n  const removeReminder = (index) => {\r\n    setReminders(reminders.filter((_, i) => i !== index));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>Reminders</h3>\r\n      <input \r\n        type=\"text\" \r\n        placeholder=\"Add a reminder...\" \r\n        value={newReminder} \r\n        onChange={(e) => setNewReminder(e.target.value)}\r\n      />\r\n      <button onClick={addReminder}>Add</button>\r\n\r\n      <ul>\r\n        {reminders.map((reminder, index) => (\r\n          <li key={index}>\r\n            {reminder} <button onClick={() => removeReminder(index)}>❌</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n*/\nvar _c;\n$RefreshReg$(_c, \"Reminders\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Reminders","_s","reminders","setReminders","newReminder","setNewReminder","date","time","note","handleInputChange","e","target","name","value","addReminder","newList","localStorage","setItem","JSON","stringify","showNotification","deleteReminder","index","updatedReminders","filter","_","i","message","Notification","permission","body","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","onClick","map","reminder","_c","$RefreshReg$"],"sources":["C:/vardha/Menstrual/frontend/src/pages/Reminders.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"../styles/Reminders.css\";\r\n\r\nfunction Reminders() {\r\n  const [reminders, setReminders] = useState([]);\r\n  const [newReminder, setNewReminder] = useState({ date: \"\", time: \"\", note: \"\" });\r\n\r\n  const handleInputChange = (e) => {\r\n    setNewReminder({ ...newReminder, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const addReminder = () => {\r\n    if (newReminder.date && newReminder.time && newReminder.note) {\r\n      const newList = [...reminders, newReminder];\r\n      setReminders(newList);\r\n      localStorage.setItem(\"reminders\", JSON.stringify(newList));\r\n      setNewReminder({ date: \"\", time: \"\", note: \"\" });\r\n      showNotification(`Reminder set for ${newReminder.date} at ${newReminder.time}`);\r\n    }\r\n  };\r\n\r\n  const deleteReminder = (index) => {\r\n    const updatedReminders = reminders.filter((_, i) => i !== index);\r\n    setReminders(updatedReminders);\r\n    localStorage.setItem(\"reminders\", JSON.stringify(updatedReminders));\r\n  };\r\n\r\n  const showNotification = (message) => {\r\n    if (Notification.permission === \"granted\") {\r\n      new Notification(\"Menstrual Tracker\", { body: message });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"reminders-container\">\r\n      <h2>Reminders</h2>\r\n\r\n      <div className=\"reminder-inputs\">\r\n        <input type=\"date\" name=\"date\" value={newReminder.date} onChange={handleInputChange} />\r\n        <input type=\"time\" name=\"time\" value={newReminder.time} onChange={handleInputChange} />\r\n        <input type=\"text\" name=\"note\" placeholder=\"Reminder note...\" value={newReminder.note} onChange={handleInputChange} />\r\n        <button onClick={addReminder}>Add Reminder</button>\r\n      </div>\r\n\r\n      <h3>Scheduled Reminders:</h3>\r\n      <ul>\r\n        {reminders.map((reminder, index) => (\r\n          <li key={index}>\r\n            {reminder.date} at {reminder.time} - {reminder.note} \r\n            <button onClick={() => deleteReminder(index)}>❌</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Reminders;\r\n\r\n\r\n\r\n\r\n\r\n/*\r\nimport { useState } from \"react\";\r\n\r\nexport default function Reminders() {\r\n  const [reminders, setReminders] = useState([]);\r\n  const [newReminder, setNewReminder] = useState(\"\");\r\n\r\n  const addReminder = () => {\r\n    if (newReminder.trim() !== \"\") {\r\n      setReminders([...reminders, newReminder]);\r\n      setNewReminder(\"\");\r\n    }\r\n  };\r\n\r\n  const removeReminder = (index) => {\r\n    setReminders(reminders.filter((_, i) => i !== index));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>Reminders</h3>\r\n      <input \r\n        type=\"text\" \r\n        placeholder=\"Add a reminder...\" \r\n        value={newReminder} \r\n        onChange={(e) => setNewReminder(e.target.value)}\r\n      />\r\n      <button onClick={addReminder}>Add</button>\r\n\r\n      <ul>\r\n        {reminders.map((reminder, index) => (\r\n          <li key={index}>\r\n            {reminder} <button onClick={() => removeReminder(index)}>❌</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n*/"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}